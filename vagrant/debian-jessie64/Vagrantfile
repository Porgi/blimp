# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "debian/jessie64"

  # XXX use a known, static IP to "rendevous" with the Ansible
  # provisioning below.  The current value is randomly chosen.
  config.vm.network :private_network, ip: "192.168.111.222"

  # DEBUG test
  config.vm.provision "shell",
                      inline: "sudo id"

  # Create volumes to provide block devices to run encrypte disk setup upon
  config.vm.provider "virtualbox" do |vb|
    key_disk = ".vagrant/machines/default/virtualbox/device-key" + ".vdi"
    unless File.exist?(key_disk) 
      vb.customize ['createhd', '--filename', key_disk, '--size', 8 * 1024] 
    end 
    vb.customize ['storageattach', :id,
                  '--storagectl', 'SATA Controller',
                  '--port', 1,
                  '--device', 0,
                  '--type', 'hdd',
                  '--medium', key_disk] 

    storage_disk = ".vagrant/machines/default/virtualbox/device-str" + ".vdi"
    unless File.exist?(storage_disk) 
      vb.customize ['createhd', '--filename', storage_disk, '--size', 32 * 1024] 
    end 
    vb.customize ['storageattach', :id,
                  '--storagectl', 'SATA Controller',
                  '--port', 2,
                  '--device', 0,
                  '--type', 'hdd',
                  '--medium', storage_disk]
  end

  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "v"
    # XXX how to automatically generate hosts information?
    #     as workaround we are specifying the config.vm.network explicitly in
    #     "../../../scripts/ansible/hosts-vagrant"
    # ansible.groups = {
    #   "blimp" => ["blimp"],
    #   "all_groups:children" => ["blimp"]
    # }
    ansible.sudo=true
    ansible.inventory_path="../../scripts/ansible/hosts-vagrant"
    ansible.playbook = "../../scripts/ansible/blimp-first-time.yml"
  end
end
